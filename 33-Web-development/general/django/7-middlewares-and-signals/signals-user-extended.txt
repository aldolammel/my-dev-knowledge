

USING SIGNALS: EXTENDING THE DJANGO USER DATA


    1) Extending Django built-in user features:
        
        >> Very basic to use:
            /33-Web-development/general/django/3-1-backend-models-database/3-users/extending-users-basic.txt

        >> Way where signals are needed:
            /33-Web-development/general/django/3-1-backend-models-database/3-users/extending-users-with-profile.txt


    2) Create a 'signals.py' file into the 'accounts' sub-app if not available yet, and:

        from django.dispatch import receiver
        from django.db.models.signals import post_save
        from django.contrib.auth.models import User
        from .models import UserProfile


        # Creates the UserProfile when a new User is created, associating the UserProfile to the new User:
        @receiver(post_save, sender=User)
        def user_profile_auto_creation(sender, instance, created, **kwargs):
            if created:
                # Create the UserProfile with additional fields data from the form (if available):
                profile_data = getattr(instance, '_profile_data', {})
                UserProfile.objects.create(
                    user=instance,
                    profile_type=profile_data.get(
                        'profile_type', UserProfile._meta.get_field('profile_type').default
                    ),
                    sex=profile_data.get('sex', None),
                )



    3) Register the signals.py file in the app.py file:

        from django.apps import AppConfig

        class AccountsConfig(AppConfig):
            default_auto_field = 'django.db.models.BigAutoField'
            name = 'accounts'

            def ready(self):
                from . import signals
