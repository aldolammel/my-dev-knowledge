

DJANGO FORMS

    >> All data that can be input in the database from front-end;

    >> Let's imagine you got in the models.py file a class to record movies with a few fields to
        fill. Now, to the user add movies from the front-end, we need to create a form class to
        connect the database with the template:

        1) In some sub-app folder, create a file called 'forms.py';

        
        2) In the new sub-app forms.py file, create the class:

            E.g.

                # Import this:
                from django import forms
                
                # Create a class specifically for this form:
                class MovieForm(forms.Form):

                    # Call this the built-in class:
                    class Meta:

                        # Connecting the form with the model/table it will populate:
                        model = Movie  # assuming it's the table you got in your models.py;

                        # Bring all class attributes/database columns that will be worked by form:
                        fields = [
                            'title',
                            'release_year',
                            'rating',
                        ]
                        # Customizing each field name:
                        labels = {
                            'title': 'Movie title',
                            'release_year': 'The year of the movie's release',
                            'rating': 'Your personnal rating',
                        }
                    

    
        3) In the sub-app views.py file, create the function-view or the class-view responsable for
            this form to be used in a template:

            E.g.
                
                # Using a function-based method:
                def movie_add(request):
                    # 
                    if request.method == 'GET':
                        # Define a variable for the form-class you are working on:
                        form = MovieForm()
                        # Define the context:
                        context = {'form': form}
                        # Define which template must be used when it's rendered:
                    # 
                    return render(request, 'movies/add.html', context)



        4) In the sub-app urls.py file, do it:

            E.g.

                urlpatterns = [
                    # http://127.0.0.1:8000/movies/new
                    path('new/', views.movie_add, name='form_new'),
                ]



        5) In the sub-app template 'movies/add.html', let's apply the form:

            {% block content %}
                
                <h1>Adding New Movie</h1>

                <form>
                    {{ form.as_p }}
                </form>
                
            {% endblock content %}


