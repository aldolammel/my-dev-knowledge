

WEB ERROR TYPES:


    401, UNAUTHORIZED ERROR:

        >> 4xx client errors;
        
        >> Similar to 403 Forbidden, but specifically for use when authentication is required and has
            failed or has not yet been provided. The response must include a WWW-Authenticate header
            field containing a challenge applicable to the requested resource. 

        >> Example:
            /33-Web-development/general/django/12-error-pages/401/



    403, FORBIDDEN ERROR:

        >> 4xx client errors;

        >> The request contained valid data and was understood by the server, but the server is 
            refusing action. This may be due to the user not having the necessary permissions for a
            resource or needing an account of some sort, or attempting a prohibited action 
            (e.g. creating a duplicate record where only one is allowed). This code is also typically
            used if the request provided authentication by answering the WWW-Authenticate header field
            challenge, but the server did not accept that authentication. The request should not
            be repeated.

        >> Example:
            Edit the 401 example for your application ;)



    404, NOT FOUND:

        >> 4xx client errors;
        
        >> The requested resource could not be found but may be available in the future. 
            Subsequent requests by the client are permissible.

        >> IMPORTANT: When out of Debug mode, Django already looks automatically for the 404.html
                        file in the project global 'templates' folder.

        >> Example:
            /33-Web-development/general/django/12-error-pages/404/



    503, SERVICE UNAVAILABLE:

        >> 5xx server errors

        >> The server cannot handle the request (because it is overloaded or down for maintenance).
            Generally, this is a temporary state.

        >> Example:
            /33-Web-development/general/django/12-error-pages/503/