

REGISTERING: CUSTOMIZING THE FRONT-END FORM


    >> forms.py in your app (e.g., accounts/forms.py)

        from django import forms
        from django.contrib.auth.forms import UserCreationForm
        from django.contrib.auth.models import User

        class CustomUserCreationForm(UserCreationForm):
            # Add additional fields if needed
            email = forms.EmailField(required=True)

            class Meta:
                model = User
                # Specify the fields to include in the form, in the order you want
                fields = ['username', 'email', 'password1', 'password2']

            def save(self, commit=True):
                # Save the provided password in hashed format
                user = super().save(commit=False)
                user.email = self.cleaned_data['email']
                if commit:
                    user.save()
                return user



    >> html with the register form:

        /33-Web-development/general/django/9-forms/frontend-user-register-form.txt



    >> views.py in your app (e.g., accounts/views.py)

        from django.shortcuts import render, redirect
        from django.contrib.auth import login
        from .forms import CustomUserCreationForm

        def register(request):
            if request.method == 'POST':
                form = CustomUserCreationForm(request.POST)
                if form.is_valid():
                    user = form.save()
                    # Log the user in after successful registration (optional)
                    login(request, user)
                    return redirect('home')  # Redirect to a home page or any other page
            else:
                form = CustomUserCreationForm()

            return render(request, 'accounts/register.html', {'form': form})



    >> urls.py in your app (e.g., accounts/urls.py)

        from django.urls import path
        from . import views

        # Namespace:
        app_name = 'accounts'

        urlpatterns = [
            # http://127.0.0.1:8000/accounts/register/
            path('register/', views.register, name='register_view'),
        ]



    >> settings.py in your config-folder:

        LOGIN_REDIRECT_URL = '<subapp_namespace>:<name_viwe>'  # Where to redirect after login
        LOGOUT_REDIRECT_URL = '<subapp_namespace>:<name_viwe>'  # Where to redirect after logout

