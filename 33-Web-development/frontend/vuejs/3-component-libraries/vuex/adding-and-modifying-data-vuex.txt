

VUEX: HOW TO ADD/MODIFY DATA

    >> Basic: 
        
        >> all front-end data is stored in /projectroot/store/;
        
        >> VueX config-file is in /store/index.js;
        
        >> In config-file, the "state" dictionary means data, so it's all data being sent to
            the template/front-end.

                E.g.
                    state: {
                        products: [1, 2, 3];  // a state property with static data;
                    }
        
        >> If a component needs data, it must be provided by state properties;

            >> Any state property needs mandatorily an action and mutation to be updated;
                In other words, to change a state/data property, Vuex demands you to create
                an "action" first to request a change in the state. After that and finally, it
                will make the change be shown at the view (Vue components). 
                This is the concept of one-way data flow:
                    
                    /33-Web-development/frontend/vuejs/3-component-libraries/vuex/one-way-data-flow.png

        >> If you are coding .vue files using "Options API" approach, be aware: store data shouldn't
            be used through the component "data", but component "computed";

            >> What's Options API approach:
                /33-Web-development/frontend/vuejs/2-vue-knowledge/4-component-approach.txt

        >> In order to call an action to change a data, you need to use the dispatch() method with
            the desired action:

                E.g.
                    # To add 'quantity' attribute with its value in a product, in the component .vue file:
                    ...
                    methods: {
                        addToCart(product) {
                            product.quantity = 1;
                            this.$store.dispatch('addToCart', product);
                        }
                    }

    >> xxxx


    >> HOW TO RECEIVE DATA (STATE PROPERTY) THROUGH AN API:
        /xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 
    
