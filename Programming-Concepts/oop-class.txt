

OOP: CLASSES

    >> Basic:
        /Programming-Concepts/oop.txt


    >> Class example 1:
            
            class Dog:
                # This is where attributes and methods are defined!
                pass

    
    >> Class example 2:

            class Dog:                                                   # Parent-class/Base-class
                species = "Canis familiaris"                             # attr shared by all dogs

                def __init__(self, name, age, color):    # If an INSTANCE is created, make it unique
                    """Built-in method called 'Constructor', designed to initialize the instance."""
                    self.name = name                                     # inst attr unique each dog
                    self.age = age
                    self.color = color

                def barking(self):                                       # instance method
                    return "Woof, woof, woof!"

                def description(self):                                   # another instance method
                    return f"{self.name}'s {self.age} years old."

    
    >> Class example 3:

            class Doberman(Dog):                                               # Child-class
                def __init__(self, name, age, color="black", ears="cropped"):  # inherit and Extend
                    """Built-in method called 'Constructor', designed to initialize the instance."""
                    super().__init__(name, age, color)                         # inherit Dog methods
                    
                    self.ears = ears                                   # Doberman-specific attribute

                def description(self):                                   # overrides a parent method
                    return f"{self.name}'s adult. Its ears are {self.ears}."

    
    >> Finally, using classes:
        
            my_dog = Dog("Bob", 5, "yellow")                                # creates a Dog instance
            print(f"{my_dog.name}'s species: {my_dog.species}")             # calls attributes
            print(my_dog.description())                                     # calls method
            
            my_dober = Doberman("Zeus", 3, "black", "cropped")         # creates a Doberman instance
            print(my_dober.barking())                            # calls a method inherited from Dog
            print(my_dober.description())       # calls a class method overridden by instance method


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 


    >> Directly related:

        >> Class Attributes:
            /Programming-Concepts/oop-class-attribute.txt

        >> Class Functions (Methods):
            /Programming-Concepts/oop-class-function.txt


    >> By language:

        >> Classes with Python:
            /Python/python-knowledge/25-Classes/

        >> Classes with JavaScript:
            /JavaScript/js-knowledge/classes/


