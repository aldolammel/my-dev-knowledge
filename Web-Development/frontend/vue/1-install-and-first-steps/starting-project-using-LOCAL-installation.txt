

>> ATTENTION: regardless anything, don't install Vue in these paths to avoid conflicts:

            >> If Django backend: /project_root/templates/*
                More: /Web-Development/frontend/vue/1-install-and-first-steps/backend-python-django.txt


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 


>> For Node-Package-Manager I will use NPM (Node.js standard command):

            
    >> Choosing the scaffolding and managing tool (build-tool) for Vue.js projects:
    
        1.2.1) Vite (New standard for Vue 3, faster Command Line Interface, created by Vue team);
        1.2.2) Or Vue-CLI (Old Vue stardard Command Line Interface / Webpack-based);
        
        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
        
        1.2.1) Using Vite:
                More about in https://vite.dev/

            >> On terminal, go to the folder where you wanna create the Vue project folder
                BUT don't do that yet!
            
            >> Install Vite locally (without -g) and start the project creation:
                # This process will create the project folder, asking you the folder name soon!
                $ npm create vite@latest
                    # Just follow the prompt instructions/options!

                >> Recommended Vite settings:
                    - Project name: = vue-<clientName_productType_releaseYear> or just 'frontend' when in the backend folder.
                    
                    - Framework = vue
                    
                    - Variant = JavaScript
                    
                    - CSS Pre-processors? Yes but later!
                        Vite 6+ has native support for: .scss, .sass, .less, .styl, .stylus,
                        so NO need to install plugins for them;
                    
                    - Babel? No:
                        Vite already convert JS code for all browsers;
                    
                    - Linter/Formatter? Yes but later!
                        Vite has NO standard solution;

                >> Get in the project folder:
                    $ cd vue-<project_name_chosen>

                >> Finishing the installation, executing a command that will install all the project's
                    dependencies, and their other dependencies (it creates the 'node_modules' folder):
                        $ npm install
                    # Check what is locally installed:
                        $ npm list
                
            >> Run the Vue service:
                # On the vue-project-folder:
                    $ npm run dev
                

            >> (optional) Update Vite:

                # Checking the current Vite version:
                # if Vite is global, anywhere, otherwise, in the project folder!
                    $ npm list
                # Updating to the latest version:
                    $ npm update vite
                # Or updating to a specific version:
                    $ npm install vite@6.3.5

                # Checking again the current Vite version:
                    $ npm list


            >> (optional) Uninstall Vite:

                # Locally:
                    $ npm uninstall vite
                # Or globally:
                    $ npm uninstall -g vite
                # Check if uninstalled:
                # Locally:
                    $ npm list
                # Globally:
                    $ npm list -g


            >> Extending Vite:

                >> CSS Pre-processors (Vite built-in solutions):
                    /Web-Development/frontend/css/scss/vue-integration.txt
                
                >> Linter (Vite needs plugins to run one):
                    >> ESLint:
                        /Web-Development/frontend/vue/3-plugins/eslint/installing-with-vite.txt

                        >> How to use execute the linter / How to check code with it:
                            /Web-Development/frontend/vue/3-plugins/eslint/using-eslint.txt


        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

        1.2.2) Or using Vue-CLI:
                More abount in https://cli.vuejs.org/

            >> Install Vue-CLI globally (-g):
                $ npm install -g @vue/cli

                # Checking installation:
                $ vue --version  # 'vue' command means 'vue-cli' and not the Vue itself.

                >> Important: check if the Vue CLI is attached to the right Node.js version,
                            looking for this line in the terminal right after the Vue-cli
                            installation is finished:
                            
                            "npm warn EBADENGINE   current: { node: 'v24.0.1', npm: '11.3.0' }"

                            >> If node version is NOT what you want, do it:

                                A) Switch the Node version to use:
                                    /JavaScript/Web-development/backend/nodejs/switch-node-version.txt

                                B) Re-install the Vue-CLI!

            >> Start the project creation:
                $ vue create vue-<project_name>
                # E.g. $ vue create vue-cefalog
                # Just follow the prompt instructions/options!

                >> Recommended Vue-CLI settings:

                    A) Select "Manually select features"!
                    B) Select Vue version 3;
                    C) Select the options:
                        - Babel (make your JS lines more compatible with modern browsers);
                        - CSS Pre-processors (support to scss/sass/less/stylus);
                        - Linter / Formatter (code checker);
                    D) Select "Sass/SCSS (with dart-sass)";
                    E) Select "ESLint with error prevention only";
                    F) Select "Lint on save";
                    G) Now be aware:
                        >> For small projects:
                            select "package.json";
                        >> For medium or big projects:
                            select "dedicated config files";

                >> Get in the project folder:
                        $ cd vue-<project_name_chosen>
                    # Check what is locally installed:
                        $ npm list
                
            >> Run the Vue service:
                # On the vue-project-folder:
                    $ npm run serve


            >> Update Vue-CLI:

                # Update globally (-g):
                    $ npm update -g @vue/cli

                # Check the current Vue-CLI version:
                    $ vue --version
                
                # Check whether Vue-CLI is locally of globally installed:
                    $ npm list


            >> Uninstall Vue-cli:

                # Globally:
                    $ npm uninstall -g @vue/cli
                # Or locally:
                    $ npm uninstall @vue/cli
                # Check if uninstalled:
                    $ vue --version


    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

    >> Use these links to access your Vue project on browser:

        http://localhost:<port>
        
        # Vue Devtools dedicated windows:
        http://localhost:<port>/__devtools__/  
        
        # Vue Devtools modal window shortcut:
        Alt+Shift+D


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 


>> Back to the installation instructions:

    /Web-Development/frontend/vue/1-install-and-first-steps/create-vue-project.txt
