

REMOVING LIST ITEM:


    >> script:

        <script setup>
        import { ref } from 'vue'

        // Reactive data - equivalent to data() in Options API
        const members = ref(window.members)  // Convert to reactive reference
        const new_member = ref({})           // Initialize as reactive empty object

        // Methods - regular functions in Composition API
        const add_member = () => {
        // ... (add_member logic would go here)
        }

        const remove_member = (idx) => {
        // This function removes a member from the musician's list.
        // Remove 1 element at the specific index using splice:
        members.value.splice(idx, 1)
        }

        // Note: In <script setup>, all top-level variables and functions 
        // are automatically exposed to the template, so no need for explicit return
        </script>


    >> template:

        <tr v-for="member in members">
            <td>
                <a href="#" @click="remove_member(member)">
                    Delete musician!
                </a>
            </td>
        </tr>


    >> style:

        Nothing.



    >> Adding example:
        /Web-Development/frontend/Vue/vue-knowledge/using-composition-api/adding-list-item.txt
        
    >> Project Example:
        /xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx