

VUE: PROPS ("PROPERTIES")


    Props in Vue.js are a way to pass data from a parent-component (main-app) to one child-component
    (sub-app) or more. They create a one-way-data-flow where the parent sends data down to its
    child-components.

        - Props are defined always in the child-component that's requesting data;
        - Props allow parent-components to pass data to child-components;
        - Props make components reusable by accepting different input values;
        - Props are read-only in the child-component;

        >> It's important always to declare which type is each props:
            - String
            - Number
            - Boolean
            - Array
            - Object
            - Date
            - Function
            - Symbol
            - Error


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 


    >> Props using Options-API:

            // In a ChildComponent.vue:
            <script>
                export default {
                    
                    // Props declaration for Options-API:
                    props: {
                        contacts: {
                            type: Array,  // array of objects, for example...
                            required: true
                        }
                    },

                    // Emits declaration:
                    // Reserved space...
                }
            </script>



    >> Props using Composition-API:

            // In a ChildComponent.vue:
            <script setup>
                // Props declaration for Composition-API:
                const props = defineProps({
                    contacts: {
                        type: Array,  // array of objects, for example...
                        required: true
                    }
                })
                
                // Emits declaration:
                // Reserved space...
            </script>
            

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 


    >> Full examples of Props being used:
        
        >> Using Options-API:
            /Web-Development/frontend/Vue/vue-knowledge/using-options-api/props-example.txt
        
        >> Using Composition-API:
            /Web-Development/frontend/Vue/vue-knowledge/using-composition-api/props-example.txt


    >> Don't use Props without to know this:
        /Web-Development/frontend/Vue/vue-knowledge/5.1.1-props-deeper-structure-problem.txt
        
    
    >> Once the child is NOT allow to change parent's data, child can ask its parent for a change,
        using 'emits' method:
            /Web-Development/frontend/Vue/vue-knowledge/5.2-emits.txt


    

