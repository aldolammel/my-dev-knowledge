

BACK AND FRONT-END INTEGRATION: DJANGO AND VUE


    PRE.1) It's crucial 'Pagex' module (sub-app by @aldolammel) be installed in the back-end.

            /Python/Web-development/django/usefull-sub-apps/pagex/pagex.txt

    PRE.2) Data workflow between Django and Vue:
            
            /Python/Web-development/django/4-cms-admin/frontend-integration/with-vue/django-with-vue-integration.png


    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 


    x) Create serializers in a new file /pagex/serializers.py to ensure your Django backend serves
        content through the REST API:

            /Python/Web-development/django/4-cms-admin/frontend-integration/with-vue/examples/simple-using-pagex/apps/pagex/serializers.py
    
    
    x) Set up API endpoints in Views of Aldo Lammel's Pages-app to expose what the serialization brings from Vue:

            /Python/Web-development/django/4-cms-admin/frontend-integration/with-vue/examples/simple-using-pagex/apps/pagex/views.py


    x) In /core/urls.py, initialize the Router and its Viewsets, and then add API endpoints:

            /Python/Web-development/django/4-cms-admin/frontend-integration/with-vue/examples/simple-using-pagex/core/urls.py


    x) Remove from Django the Aldo Lammel's Pages-app URLs/API endpoints handling. Vue-Router will handle them instead:

            /Python/Web-development/django/4-cms-admin/frontend-integration/with-vue/examples/simple-using-pagex/apps/pagex/urls.py
        

    x) Create a Pinia store to manage page content:

            /Python/Web-development/django/4-cms-admin/frontend-integration/with-vue/examples/simple-using-pagex/frontend/src/stores/pages.js


    x) Update your Vue components to use the store data. For example in About.vue:

            /Python/Web-development/django/4-cms-admin/frontend-integration/with-vue/examples/simple-using-pagex/frontend/src/pages/About.vue
            

    x) Add CORS settings to allow Vue.js to access the Django API, and update settings.py:

            /Python/Web-development/django/4-cms-admin/frontend-integration/with-vue/examples/simple-using-pagex/core/settings.py


    x) Configure the Vue's build-tool:

        >> Using Vite:
            /Python/Web-development/django/4-cms-admin/frontend-integration/with-vue/examples/simple-using-pagex/frontend/vite.config.js

        >> Using xxxxxxxx:
                /xxxxxxxxxxxxxxxxxxxxxxxxxxxx


    x) Create/edit pages in Django admin and update each page id: (NAO UTILIZO MAIS!!!!)

            x.1) Make sure you already have each dynamic page of the project's product created in Django admin.

            x.2) Update the pagesConstants.js:
                /Python/Web-development/django/4-cms-admin/frontend-integration/with-vue/examples/simple-using-pagex/frontend/src/pages/pagesConstants.js


    x) xxxxx

            E.g.
                xxxxxxxxxxxxxxxxxxxxxxxx


    x) Test the integration now:

            /Python/Web-development/django/4-cms-admin/frontend-integration/testing-integration.txt
            


