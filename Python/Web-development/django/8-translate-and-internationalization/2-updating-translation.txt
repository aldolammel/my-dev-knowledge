

    UPDATING A TRANSLATION PROJECT:

        There some approaches with different steps:


            CASE A) Non-database data: Update the original language;
                
                >> Crucial: the original language (msgid) NEVER be updated directly in a .po file!


            CASE B) Non-database data: Update an additional translation;

                >> Crucial: a translation (msgstr) is updated only through its .po file or
                            via Rosetta Module!


            CASE C) Database data: update a model-attribute already as 'translations';


            CASE D) Database data: add a new model-attribute as 'translations';


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 


        >> CASE A:
            
            1) Update the original/default text directly in models, views and templates files;

            2) Re-generate all translations (.po) because you've tweaked the original language,
                consequently changing the 'msgid' those files are using to link their translations:

                    $ django-admin makemessages --all
            
            3) Re-compile (it updates the application):

                    $ django-admin compilemessages

                    >> Important: if some .po file lines got 'fuzzy' flag after the file header,
                                    it's because the translator needs to work on it!

            4) Test the update!



        >> CASE B:

            >> With NO translation manager:
            
                1) Open the .PO file related with the additional language that need to be updated;

                2) In the .po file, update all 'msgstr' that need attention;

                3) Re-generate the .PO file:

                    E.g.

                        $ django-admin makemessages -l pt_BR

                4) Re-compile (it updates the application):

                    $ django-admin compilemessages

                    >> Important: if some .po file lines got 'fuzzy' flag after the file header,
                                    it's because the translator needs to work on it!

                5) Test the update!


            >> Or with Rosetta Manager:

                1) Open Rosetta: http://127.0.0.1:8000/rosetta

                2) ...




        >> CASE C:
        
            1) Update the desired 'translations' attribute as you wish; 

            2) makemigrations and migrate commands!
            


        >> CASE D:
            
            1) Check if the model is already child of 'TranslatableModel'. Create a 'translations' 
                attribute in the class or, then, add the new translatable field in the existent 
                'translations' attribute:

                    E.g.

                        /33-Web-development/backend/python/django/8-translate-and-internationalization/translate-models.txt

                        >> CRUCIAL: To avoid the 'migration' BUG, make sure you are following
                                    steps from the link above!


            5) For CMS, if some admin.py changes is needed, don't forget the 'TranslatableAdmin' inherit:

                /33-Web-development/backend/python/django/8-translate-and-internationalization/translate-cms.txt


            6) Test!
