

DJANGO FORMS VALIDATIONS: FOR DATABASE LEVEL (DB CONSTRAINTS)

    When a form field needs a basic validation as well as 'maximum length' or 'it cannot be empty', you need database level validation, also called 'database constraints'. As we are talking about validations direct for database (via Django), we are restrict a not complex options, and NONE of them will force Django to propagate that rules for other levels/layers of your app.
    
    So, you must have it in mind that's just the first, basic and deepest validation level you will dive in your project. DB constraints are set via /apps/my_app/models.py file:

        E.g. very basic constraints:

            class ExampleModel(models.Model):
                attribute_example = models.CharField(
                    ...
                    max_length=100,            # db level validation.
                    blank=False,               # db level validation.
                    unique=True,               # db level validation.
                    null=False,                # db level validation.
                    
                    validators=[...]           # More options, but only for APP level.
                )


        E.g. Using db constraints to be more specific (e.g., supported by Postgres, MySQL):

            from django.db.models.functions import Length
            models.CharField.register_lookup(Length)

            class Product(models.Model):
                name = models.CharField(...)
                ...

                class Meta:
                    constraints = [
                        models.CheckConstraint(
                            condition=models.Q(
                                name__length__range=(
                                    consts.VAL_TITLE_MIN,
                                    consts.VAL_TITLE_MAX
                                )
                            ),
                            name="product_name_length",
                        ),
                    ]
                ...


    >> Exploring more database constraint possibilities (make sure your DB supports):

        ./validation-constraint-text-length.txt
        ./validation-constraint-numerical-logics.txt
        ./validation-constraint-date-logics.txt
        ./validation-constraint-conditionals.txt


    >> About Model clean() method:
    
        If you are thinking to use Model clean() method to validate database, remember: clean() method is used just to custom validates in Django-level, never in db-level.


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

    OTHER VALIDATION LEVELS:
        ./1-validation-basic.txt
