

    FORM ERROR MESSAGES AND CSS:

        >> Error messages on templates:

            /Python/Web-development/django/3-3-frontend-templates/form-error-messages.html


        >> How to use error identification (useful for CSS) helps to categorize errors:

            In your back-end:

                E.g.

                    raise ValidationError('Opção não disponível no Brasil!', code='invalid_choice')


            In your templates, you can target errors based on their codes. If you need to display
            a different message or style for errors with the 'invalid' code versus another type, 
            the error code helps you do that.

                E.g.

                    {% if form.goal_primary.errors %}
                        {% for error in form.goal_primary.errors %}
                            {% if error.code == 'invalid' %}
                                <p>There is an invalid selection in the goals.</p>
                            {% else %}
                                <p>{{ error }}</p>
                            {% endif %}
                        {% endfor %}
                    {% endif %}



        >> Error identification types:
            /Python/Web-development/django/6-validators/error-identification-codes.txt

            