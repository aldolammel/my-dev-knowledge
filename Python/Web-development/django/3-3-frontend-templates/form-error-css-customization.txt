

    FORM ERROR MESSAGES AND CSS:

        >> Error messages on templates:

            /33-Web-development/backend/python/django/3-3-frontend-templates/form-error-messages.html


        >> How to use error identification (useful for CSS) helps to categorize errors:

            In your back-end:

                E.g.

                    raise ValidationError('Opção não disponível no Brasil!', code='invalid_choice')


            In your templates, you can target errors based on their codes. If you need to display
            a different message or style for errors with the 'invalid' code versus another type, 
            the error code helps you do that.

                E.g.

                    {% if form.goal_primary.errors %}
                        {% for error in form.goal_primary.errors %}
                            {% if error.code == 'invalid' %}
                                <p>There is an invalid selection in the goals.</p>
                            {% else %}
                                <p>{{ error }}</p>
                            {% endif %}
                        {% endfor %}
                    {% endif %}



        >> Error identification types:

            >> code='invalid':
                            
                Meaning that the provided data is not valid according to the specified
                rules.


            >> code='required':

                Raised when a required field is left empty.


            >> code='unique': 

                Raised when a field or model requires unique values, and the user submits a
                duplicate value.

            
            >> code='max_length' | code='min_length':

                Max - Raised when the length of the input exceeds the maximum allowed length
                        for a field.
                
                Min - Raised when the length of the input is less than the minimum required
                        length for a field.  
            

            >> code='max_value' | code='min_value':

                Max - Raised when the value of a numeric field exceeds the maximum
                        allowable value.
                
                Min - Raised when the value of a numeric field is below the minimum
                        allowable value.


            >> code='invalid_choice':

                Raised when a value is selected that is not a valid choice for
                a ChoiceField.

            
            >> code='overlap':

                Custom error code when two fields have overlapping or conflicting values
                (useful in date ranges, or two ChoiceField selected options conflicting).


            >> code='non_field_error':

                This is a catch-all error code used for validations that don't belong to
                a specific field, such as cross-field validations (conflicting).

            
            >> code='blank' | code='null':

                blank - Raised when a required field is left blank, even though null might
                        be allowed at the database level, but blank=False for forms.

                null - Raised when a field value is None but the field does not allow null
                        values (null=False in a model).


            >> code='permission_denied':

                Raised when the user doesn't have permission to perform a certain action.


            >> code='invalid_login':

                Raised when login credentials (username/password) are incorrect.

