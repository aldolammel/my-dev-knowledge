

DJANGO CORS HEADERS:

    It's a Django app designed to handle Cross-Origin Resource Sharing (CORS) headers in responses
    from your Django app. CORS is a security mechanism implemented by web browsers to restrict web
    pages from making requests to a different domain than the one that served the web page.

    https://github.com/adamchainz/django-cors-headers


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 


    >> Install:

        # With PIP:
            $ python -m pip install django-cors-headers
        # With UV:
            $ uv add django-cors-headers


    >> Integration:

        1) Open the core settings.py in your Django project, and add these lines:

            INSTALLED_APPS = [
                ...,
                "corsheaders",
                ...,
            ]

        2) Still in settings.py, add these lines too:

            MIDDLEWARE = [
                ...,
                "corsheaders.middleware.CorsMiddleware",
                "django.middleware.common.CommonMiddleware",
                ...,
            ]

            >> CRITICAL: CorsMiddleware should be placed as high as possible, especially before any
                        middleware that can generate responses such as Django's CommonMiddleware or
                        Whitenoise's WhiteNoiseMiddleware. 

        3) For security reasons, let's do it:


            3.1) Make sure you already have defined these Environment Variables in your .env:

                E.g.
                    PROD_BASE_URL=https://clients-product-main-domain.com
                    BACK_URL1=http://localhost:8000
                    BACK_URL2=http://127.0.0.1:8000
                    FRONT_URL1=http://localhost:5173
                    FRONT_URL2=http://127.0.0.1:5173

                >> A model for your .env file: /Environment-Variables/env-for-local/in-backend/.env


            3.2) Confirm if your /core/settings.py are calling correctly those env vars:

                >> Using 'environ' module:
                    
                    # Environment Variables, basic:
                    #...
                    # Environment Variables, callers:
                    #...
                    PROD_BASE_URL = env("PROD_BASE_URL")  # Main client's product domain.
                    BACK_URL1 = env("BACK_URL1")  # Dev env for backend.
                    BACK_URL2 = env("BACK_URL2")  # Dev env for backend.
                    FRONT_URL1 = env("FRONT_URL1")  # Dev env for frontend.
                    FRONT_URL2 = env("FRONT_URL2")  # Dev env for frontend.

                >> Using another Python module:
                    
                    xxxxxxxx
                

            3.3) Still in settings.py:

                # CORS > CSRF Integration:
                # A list of origins that are authorized to make cross-site HTTP requests. The origins
                # in this setting will be allowed, and the requesting origin will be echoed back to the
                # client in the access-control-allow-origin header. Defaults to [].
                CORS_ALLOW_CREDENTIALS = True
                CORS_ALLOWED_ORIGINS = [
                    PROD_BASE_URL,
                    BACK_URL1,
                    BACK_URL2,
                    FRONT_URL1,
                    FRONT_URL2,
                ]
                CSRF_TRUSTED_ORIGINS = [
                    PROD_BASE_URL,
                    BACK_URL1,
                    BACK_URL2,
                    FRONT_URL1,
                    FRONT_URL2,
                ]


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 


>> XXXXXXXX
    /xxxxxxxxxxxxxxxxxxxx



