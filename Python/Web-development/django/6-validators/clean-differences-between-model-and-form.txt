

    VALIDATION: CUSTOMIZING WITH CLEAN() METHOD


        clean() is a built-in method that's used in forms and models for customize validations. When a form is submitted or model is saved, clean() takes each data field first to execute an expected and customized validation!


        BASIC KNOWLEDGE:
            /Python/Web-development/django/9-forms/error-messages/basic.txt


        IMPORTANT:
            All clean() in models will automatically impact on CMS validations, not needed to add something into 'admin.py' files.


        DIFFERENCES BETWEEN CLEAN() FOR MODELS.PY AND FORMS.PY:

            
            >> For MODEL classes:

                    class ExampleModel(model.Model):
                        ...

                        def clean(self):
                            """Built-in method for adding custom validation logic before full_clean() or save()."""

                            # Access model fields data directly:
                            p = self.goal_primary
                            s = self.goal_secondary

                            # Some validator function in validators.py:
                            my_custom_validator(p, s)


            >> For FORM classes:

                    class ExampleForm(forms.ModelForm):
                        ...

                        def clean(self):
                            """Built-in method for adding custom validation logic before full_clean() or save()."""

                            # Cannot access the form fields' data so easily:
                            cleaned_data = super().clean()
                            p = cleaned_data.get('goal_primary')
                            s = cleaned_data.get('goal_secondary')
                            
                            # Some validator function in validators.py:
                            my_custom_validator(p, s)

                            # Demands a return:
                            return cleaned_data



        >> HOW TO BUILD A VALIDATORS.PY:
            /Python/Web-development/django/6-validators/models-custom-validator.py

