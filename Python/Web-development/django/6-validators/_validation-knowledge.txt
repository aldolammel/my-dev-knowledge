

DJANGO: VALIDATIONS


    Djangoâ€™s form (and model) fields support use of utility functions and classes known as validators. A validator is a callable object or function that takes a value and returns nothing if the value is valid or raises a ValidationError if not.
        
        /Python/Web-development/django/9-forms/error-messages/basic.txt


    >> CLEAN() METHOD:
        It's a built-in method for adding custom validation logic before a Model or Form saving
        data to the db. This method works little different for each one:
            /Python/Web-development/django/6-validators/clean-differences-between-model-and-form.txt


    >> MODEL VALIDATIONS - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

        Method A) By django.core.validators (modal built-in solution - simple things);
        Method B) By Clean() a model with external file (more complex stuff);

        - - - - - - - - - -
    
        A) By django.core.validators (built-in solution):

                # FILE: /my_app/models.py
                from django.core.validators import MinLengthValidator, MaxLengthValidator
                
                class Page(models.Model):
                    title = models.CharField(
                        ...
                        max_length=100,           # Database level checking.
                        validators=[              # App form level checking.
                            MinLengthValidator(3),
                            MaxLengthValidator(100),
                        ],
                    )

                # All built-in validators:
                # /Python/Web-development/django/6-validators/models-builtin-validators.txt


        B) By Clean() a model with external file:
            /Python/Web-development/django/6-validators/models-custom-validator.py

            
 


    >> FORM VALIDATIONS - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

        Method C) xxxxxxxxxxxxx;
        Method D) By Clean();

        - - - - - - - - -
        
        >> For Forms (client-side validation):
                        
            The clean method for Forms we need to pass a dictionary-like object (like cleaned_data from a form) where it can use the .get() method to retrieve form values.

            /Python/Web-development/django/6-validators/validation-customized.txt

