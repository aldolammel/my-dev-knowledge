

IDE FOR PYTHON PROJECT: VSCODE


    >> Basic for run Python:

        PRE.1) Python project:
            /Python/00-New-Project/1-new-project.txt

        PRE.2) IDE VSCode:
            Download the IDE:
            https://code.visualstudio.com

    
    >> Basic to setup VSCode also for specific projects:

        PRE.3) Assuming you already have the project's virtual environment to work:
            /Python/02-virtual-environment/creating-virtual-environment.txt

            TIP FOR UV ONLY:
                # If you wanna check if the venv exists or create one if it doesn't exist yet:
                    /Python/Package-manager/uv/create-or-find-current-venv.txt

        - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

        
        1) VSCode project settings:

            PRE) (Optional) Select your Profile more specific for this kind of project;
            1.1) In the project folder, create the .vscode folder;
            1.2) In .vscode folder, create the file 'settings.json';
            1.3) In that file, apply these lines:
                ./examples/.vscode/settings.json

            # (If applicable) Make sure your .gitignore file is not blocking the .vscode folder and its content in project repository!

        
        2) In case your VSCode profile is not well-configured yet for this kind of project:
        

            2.1) Language support (Python by Microsoft):

                Make VSCode to support Python language, providing access points and integrations for
                other extensions, offering support for intellisense, debugging, formatting, linting,
                code navigation, refactoring, variable explorer, test explorer, and more.

                Download the extension!
            

            2.2) Language server (Pylance by Microsoft):
                
                Language Server for Python that provides a deep Python language intelligence in VSCode:
                - Code Autocompletion (IntelliSense)
                - Function signature help
                - Go-to-Definition
                - Find all References
                - Real-time error highlighting directly in the editor

                Download the extension!

                2.2.1) In project/settings.json, add:

                    // PYTHON SETTINGS
                    ...
                    "python.languageServer": "Pylance", // Python language server.


            2.3) Python Debugger (by Microsoft):

                Python Debugger provides a seamless debugging experience by allowing you to set
                breakpoints, step through code, inspect variables, and perform other essential debugging tasks.

                Download the extension!


            2.4) Python Environments (by Microsoft):

                This extension provides unique support for specifying environments for specific files, entire Python folders, or projects, including multi-root and mono-repo scenarios.

                Download the extension!

            
            2.5) Type-Checker (MyPy by Microsoft):

                /Python/Linter-Formatter-Typechecker/mypy/installation.txt

            
            2.6) Linter (Ruff by Astral):
                (It's possible you already got this installed on project, so skip it)
                /Python/Linter-Formatter-Typechecker/ruff/installation.txt


            2.7) Formatter (Ruff by Astral):
                (It's possible you already got this installed on project, so skip it)
                /Python/Linter-Formatter-Typechecker/ruff/installation.txt


        3) (If applicable)
            For VSCode, re-open the /project/.vscode/settings.json, and set for each Python
            linter/formatter/type-checker the project must use!
            