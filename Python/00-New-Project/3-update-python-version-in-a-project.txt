

PYTHON: UPDATING THE PYTHON VERSION IN AN EXISTING PROJECT

    CRITICAL) Are you really sure the Python version you need to install is compatible with other techs of the project stack? For example, the back-end framework you are using supports this new Python version? If so, keep going!
    
    >> Which tool are you using:

        A) Vanilla Python;
        B) UV package manager;

        - - - - -

        A) Vanilla Python - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

            PRE) xxxxxxx
            
            A.1) xxxxxxxxxxxx

            A.2) xxxxxxxxxxxx


        B) UV - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

            PRE) What is it:
                /Python/Package-manager/uv/_about-install-and-update.txt


            B.1) Check the current Python versions installed and install that you need:
                
                # In your global local environment, check it:
                    $ uv python list

                # Add the new one, e.g.:
                    $ uv python install 3.13.3


            B.2) In your project folder/environment, set up:

                # Defining to UV which Python version the project must run, e.g.:
                    $ uv python pin 3.13.3
                        # It will auto-update the .python-version file!

                # (If applicable) For projects using RUFF:
                    [tool.ruff]
                    ...
                    target-version = "py313"  # Update here too!

                # (If applicable) For projects using MyPy:
                    [tool.mypy]
                    ...
                    python_version = "3.13"  # Update here too!

                # Sync the environment (UV will recreate venv with new Python):
                    /Python/Package-manager/uv/auto-installation-with-sync.txt

                # Deactive and active the project environment:
                    /Python/02-virtual-environment/activate-and-deactivate.txt
                
                # Verify the Python version in the environment
                    $ uv run python --version


            B.3) (Optional)
                Uninstall unwanted Python versions:
                    /Python/Package-manager/uv/uninstall-python-old-version.txt


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 


    >> CONSIDERING BACK AND FRONT-END FRAMEWORK UPDATES TOO:

        >> Django:
            /Python/Web-development/django/0-new-project/update-django-version.txt

        >> Vue:
            /JavaScript/Web-development/frontend/Vue/0-new-project/update-vue-version.txt