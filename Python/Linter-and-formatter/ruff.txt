

PYTHON LANGUAGE > LINTER AND FORMATER: RUFF


    Ruff is a high-performance linter and code formatter for Python, developed by Astral. It's 
    notable for its exceptional speed, largely attributed to being written in Rust. 

    Checks: Python syntax errors, import sorting, code style (PEP 8), bugs, complexity, etc.

    Tip: Ruff is developed by the same company of the UV Package manager, so both are completely
        integrated.
            /Python/Package-manager/uv.txt


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 


    >> INSTALLING:

        1) Already in the right virtual env, add it as dev dependency only:
            $ uv add --optional dev ruff

        2) (Optional) If using .gitignore file, add these lines:
            ### Python Linter/Formatter ###
            .ruff_cache/

        3) (Optional) Create or edit the pyproject.toml file of your project:
            # If needed, model file:
                /Python/Web-development/pyproject.toml
            # And add these lines as Python Linter and formatter config:
                # Python Linter and formatter config:
                [tool.ruff]
                line-length = 100
                [tool.ruff.format]
                quote-style = "single"
                indent-style = "tab"
                docstring-code-format = true
        
        4) (Optional) Create a list of error exceptions: 
            [tool.ruff.lint]
            ignore = []  # add an error-type like "F401" (with quotes!) to create exceptions.

        5) (Optional) Install the Ruff extension for your favorite code IDE!

    
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

    
    >> HOW TO CHECK CODE ERRORS:
        $ uv run ruff check


    >> HOW TO FIX CODE ERRORS AUTOMATICALLY:
        $ uv run ruff check --fix


    >> HOW TO FIX CODE FORMATTING:
        $ uv run ruff format                      # Format all files in Django-project-folder **.
        $ uv run ruff format path/to/code/        # Format all files in `path/to/code` (and any subdirectories).
        $ uv run ruff format path/to/file.py      # Format a single file.

        (**) Except those files in folders like .venv/, dist/, build/, .vscode/, .git/, etc...