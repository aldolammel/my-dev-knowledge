

PYTHON PACKAGE MANAGEMENT: UV


    Extremely fast Python package installer and resolver designed as a drop-in replacement for pip and pip-tools workflows.

        https://docs.astral.sh/uv/getting-started/installation/

    When you ask to UV to initiate a project, a "uv.lock" file is created automatically, guaranteeing that all copies of this project will have the same dependencies (like a Docker);

    Tip: UV is developed by the same company of the Ruff Linter/Formatter, so both are completely integrated.
        /Python/Linter-Formatter-Typechecker/ruff.txt


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
    
    
    >> INSTALLING:

        LINUX/MAC:
            # Using CURL:
                $ curl -LsSf https://astral.sh/uv/install.sh | sh
            # or using WGET:
                $ wget -qO- https://astral.sh/uv/install.sh | sh
        
        WINDOWS
            $ powershell -ExecutionPolicy ByPass -c "irm https://astral.sh/uv/install.ps1 | iex"
            $ winget install --id=astral-sh.uv  -e


    >> UPDATING UV:
        
        LINUX
            # Download and install a specific version (X.X.X):
                $ curl -LsSf https://astral.sh/uv/X.X.X/install.sh | sh


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 


    >> USING THE UV: 


        >> Create / Recreate the virtual environment in the current folder:
            $ uv init
            # Ps: It'll create automatically some files like pyproject.toml!


        >> Updating or restoring Python, and project dependencies:
            ./auto-installation-with-sync.txt


        >> Install package (only in the active virtual environment):
            ./install-dependency.txt
        

        >> Uninstall package (only in the active virtual environment):
            ./uninstall-dependency.txt



- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 


>> DJANGO PROJECT WITH UV MANAGEMENT:
    /Python/Web-development/django/1-install-and-first-steps/1-install-with-uv-package.txt


>> HOW TO CREATE A REQUIREMENTS OF PROJECT WITH UV:
    /Python/Package-manager/uv/creating-requirements-of-project.txt





