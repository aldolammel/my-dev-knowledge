

PYTHON > UV PACKAGE MANAGER: UPDATING DEPENDENCIES (--UPGRADE)

    The command 'uv --upgrade' automatically check if the dependency envolved is compatible with, for example, the Django version you are using, avoiding those dependency versions that got known compatible issues.

    
    >> Individual updates - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

        PRE) Open the project pyproject.toml and check what you want to update next!
        
        1) Update the desired dependency, e.g.:

            >> Mandatory ones:
                $ uv add "django-admin-sortable2>=2.2.7" --upgrade
            
            >> Dev dependency ones:
                $ uv add "django-stubs[compatible-mypy]>=5.2.3" --upgrade --dev

            >> A dependency from other sub-group:
                $ uv add "something>=3.0" --upgrade --subgrouphere
    
    
    >> Update everything listed in pyproject.toml - - - - - - - - - - - - - - - - - - - - - - - - - 
    
        PRE) (Only for LINUX)
            Update and Upgrade your system!
                /OS/linux/debian-ubuntu/update.txt


        1) Update dependencies:

            # It removes all dependencies,
            # and then install upgraded versions of mandatory dependencies and dev ones as well:
                $ uv sync --extra dev --upgrade

            # It removes all dependencies,
            # and then install upgraded versions of mandatory dependencies w/ multiple sub-grous:
                $ uv sync --extra dev --extra test --upgrade
            
            # It removes all dependencies, 
            # and then install upgraded versions of mandatory dependencies only (CAUTION):
                $ uv sync --upgrade


    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
                    

    2) Check the pyproject.toml if it looks fine!
        
    
    3) Test your Python project to check if everything is going well.

